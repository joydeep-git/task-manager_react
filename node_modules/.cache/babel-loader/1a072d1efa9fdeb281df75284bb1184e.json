{"ast":null,"code":"var _jsxFileName = \"E:\\\\Skill Safari\\\\COMPLETED PROJECTS\\\\task-manager-final\\\\src\\\\Components\\\\EditTask.js\",\n    _s = $RefreshSig$();\n\nimport Modal from \"./Modal\";\nimport { useState } from \"react\";\nimport { db } from \"../firebase/firebase\";\nimport { doc, updateDoc } from \"firebase/firestore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditTask(_ref) {\n  _s();\n\n  let {\n    open,\n    onClose,\n    toEditTitle,\n    toEditDescription,\n    id\n  } = _ref;\n  const [title, setTitle] = useState(toEditTitle);\n  const [description, setDescription] = useState(toEditDescription);\n\n  const handleUpdate = async e => {\n    e.preventDefault();\n    const taskDocRef = doc(db, \"tasks\", id);\n\n    if (title.trim() === \"\" || description.trim() === \"\") {\n      alert(\"Please enter a title and description for the task.\");\n      return;\n    }\n\n    try {\n      await updateDoc(taskDocRef, {\n        title,\n        description\n      });\n    } catch (error) {\n      alert(error);\n    }\n\n    onClose();\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    modalLable: \"Edit Task\",\n    onClose: onClose,\n    open: open,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"addTask\",\n      name: \"addTask\",\n      onSubmit: handleUpdate,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"title\",\n        onChange: e => setTitle(e.target.value.toUpperCase()),\n        value: title,\n        placeholder: \"Enter task title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: description,\n        onChange: e => setDescription(e.target.value),\n        placeholder: \"Enter task description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EditTask, \"TchmB0De3CMtZxroHivBEqMixPE=\");\n\n_c = EditTask;\nexport default EditTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditTask\");","map":{"version":3,"names":["Modal","useState","db","doc","updateDoc","EditTask","open","onClose","toEditTitle","toEditDescription","id","title","setTitle","description","setDescription","handleUpdate","e","preventDefault","taskDocRef","trim","alert","error","target","value","toUpperCase"],"sources":["E:/Skill Safari/COMPLETED PROJECTS/task-manager-final/src/Components/EditTask.js"],"sourcesContent":["import Modal from \"./Modal\";\nimport { useState } from \"react\";\nimport { db } from \"../firebase/firebase\";\nimport { doc, updateDoc } from \"firebase/firestore\";\nfunction EditTask({ open, onClose, toEditTitle, toEditDescription, id }) {\n  const [title, setTitle] = useState(toEditTitle);\n  const [description, setDescription] = useState(toEditDescription);\n\n  const handleUpdate = async (e) => {\n    e.preventDefault();\n    const taskDocRef = doc(db, \"tasks\", id);\n    if (title.trim() === \"\" || description.trim() === \"\") {\n      alert(\"Please enter a title and description for the task.\");\n      return;\n    }\n    try {\n      await updateDoc(taskDocRef, { title, description });\n    } catch (error) {\n      alert(error);\n    }\n    onClose();\n  };\n\n  return (\n    <Modal modalLable=\"Edit Task\" onClose={onClose} open={open}>\n      <form className=\"addTask\" name=\"addTask\" onSubmit={handleUpdate}>\n        <input\n          type=\"text\"\n          name=\"title\"\n          onChange={(e) => setTitle(e.target.value.toUpperCase())}\n          value={title}\n          placeholder=\"Enter task title\"\n        />\n        <textarea\n          value={description}\n          onChange={(e) => setDescription(e.target.value)}\n          placeholder=\"Enter task description\"\n        ></textarea>\n        <button type=\"submit\">Edit</button>\n      </form>\n    </Modal>\n  );\n}\n\nexport default EditTask;\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,SAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,EAAT,QAAmB,sBAAnB;AACA,SAASC,GAAT,EAAcC,SAAd,QAA+B,oBAA/B;;;AACA,SAASC,QAAT,OAAyE;EAAA;;EAAA,IAAvD;IAAEC,IAAF;IAAQC,OAAR;IAAiBC,WAAjB;IAA8BC,iBAA9B;IAAiDC;EAAjD,CAAuD;EACvE,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAACO,WAAD,CAAlC;EACA,MAAM,CAACK,WAAD,EAAcC,cAAd,IAAgCb,QAAQ,CAACQ,iBAAD,CAA9C;;EAEA,MAAMM,YAAY,GAAG,MAAOC,CAAP,IAAa;IAChCA,CAAC,CAACC,cAAF;IACA,MAAMC,UAAU,GAAGf,GAAG,CAACD,EAAD,EAAK,OAAL,EAAcQ,EAAd,CAAtB;;IACA,IAAIC,KAAK,CAACQ,IAAN,OAAiB,EAAjB,IAAuBN,WAAW,CAACM,IAAZ,OAAuB,EAAlD,EAAsD;MACpDC,KAAK,CAAC,oDAAD,CAAL;MACA;IACD;;IACD,IAAI;MACF,MAAMhB,SAAS,CAACc,UAAD,EAAa;QAAEP,KAAF;QAASE;MAAT,CAAb,CAAf;IACD,CAFD,CAEE,OAAOQ,KAAP,EAAc;MACdD,KAAK,CAACC,KAAD,CAAL;IACD;;IACDd,OAAO;EACR,CAbD;;EAeA,oBACE,QAAC,KAAD;IAAO,UAAU,EAAC,WAAlB;IAA8B,OAAO,EAAEA,OAAvC;IAAgD,IAAI,EAAED,IAAtD;IAAA,uBACE;MAAM,SAAS,EAAC,SAAhB;MAA0B,IAAI,EAAC,SAA/B;MAAyC,QAAQ,EAAES,YAAnD;MAAA,wBACE;QACE,IAAI,EAAC,MADP;QAEE,IAAI,EAAC,OAFP;QAGE,QAAQ,EAAGC,CAAD,IAAOJ,QAAQ,CAACI,CAAC,CAACM,MAAF,CAASC,KAAT,CAAeC,WAAf,EAAD,CAH3B;QAIE,KAAK,EAAEb,KAJT;QAKE,WAAW,EAAC;MALd;QAAA;QAAA;QAAA;MAAA,QADF,eAQE;QACE,KAAK,EAAEE,WADT;QAEE,QAAQ,EAAGG,CAAD,IAAOF,cAAc,CAACE,CAAC,CAACM,MAAF,CAASC,KAAV,CAFjC;QAGE,WAAW,EAAC;MAHd;QAAA;QAAA;QAAA;MAAA,QARF,eAaE;QAAQ,IAAI,EAAC,QAAb;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAbF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAmBD;;GAtCQlB,Q;;KAAAA,Q;AAwCT,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}